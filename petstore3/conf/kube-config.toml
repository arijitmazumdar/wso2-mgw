[docker]
  [docker.dockerConfig]
    enable = true
    #name = ""
    #registry = ''
    #tag = ''
    #buildImage = ''
    #dockerHost = ''
    #dockerCertPath = ''
    #baseImage = ''
    #enableDebug = ''
    #debugPort = ''
    push = true
    username = 'arijitmazumdar'
    password = ''
    #cmd = 'CMD gateway ${APP}'
  [docker.dockerCopyFiles]
    enable = false
    [[docker.dockerCopyFiles.files]]
        source = ''
        target = ''
        isBallerinaConf = false
[kubernetes]
    [kubernetes.kubernetesDeployment]
        enable = true
        name = 'k8s'
        tag = 'v1'
        #labels = ''
        replicas = '1'
        #enableLiveness = ''
        #initialDelaySeconds = ''
        #periodSeconds = ''
        #livenessPort = ''
        #imagePullPolicy = 'Always'
        #imagePullSecrets = ['secret1']
        #image = ''
        #env = ''
        buildImage = true
        #cmd = 'CMD gateway ${APP} --b7a.config.file=conf/micro-gw.conf --b7a.log.level=DEBUG'
        #copyFiles = ''
        #dockerHost = ''
        #dockerCertPath = ''
        push = true
        registry = 'index.docker.io/arijitmazumdar'
        username = 'arijitmazumdar'
        password = ''
        baseImage = 'wso2/wso2micro-gw:3.2.0'
    [kubernetes.kubernetesDeployment.livenessProbe]
        enable = true
        initialDelaySeconds = '20'
        periodSeconds = '20'
    [kubernetes.kubernetesDeployment.readinessProbe]
        enable = true
        initialDelaySeconds = '30'
        periodSeconds = '30'
    [kubernetes.kubernetesServiceHttps]
        enable = true
        name = 'httpsService'
        #labels = '{"": ""}'
        serviceType = 'NodePort'
        #port = ''
    [kubernetes.kubernetesServiceHttp]
        enable = true
        name = 'httpService'
        #labels = '{"": ""}'
        serviceType = 'NodePort'
        #port = ''
    [kubernetes.kubernetesConfigMap]
        enable = true
        ballerinaConf = '/home/arijit/wso2am-micro-gw-toolkit-linux-3.2.1/resources/conf/micro-gw.conf'
